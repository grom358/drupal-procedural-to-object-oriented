<!--
  name: build.xml
  description: The main project build file for phing operations. This file can
               be overridden with project specific configuration.
-->

<project name="vd8" default="prepare" phingVersion="2.4.11">

  <!--               -->
  <!--  Properties   -->
  <!-- ============= -->

  <!-- Drupal -->
  <property name="drupal.siteName" value="Drupal8" />
  <property name="drupal.email" value="user@example.com" />
  <property name="drupal.user" value="admin" />
  <property name="drupal.pass" value="password" />
  <property name="drupal.dir" value="${project.basedir}/app" />
  <property name="drupal.profile" value="standard" />

  <!-- Mysql -->
  <property name="mysql.host" value="d8.dev" />
  <property name="mysql.port" value="3306" />
  <property name="mysql.database" value="d8" />
  <property name="mysql.user" value="d8" />
  <property name="mysql.pass" value="d8" />
  <property name="mysql.queryString" value="mysql://${mysql.user}:${mysql.pass}@${mysql.host}/${mysql.database}" />

  <!-- Drush -->
  <property name="drush.cmd" value="bin/drush -r ${drupal.dir}" />

  <!-- Vagrant -->
  <property name="vagrant.dir" value="/vagrant" />

  <!-- Globals for exec commands. The main goal of these were for fast failingin the bot. -->
  <property name="test.output" value="true" />
  <property name="test.passthru" value="true" />

  <!-- Provide overrides. -->
  <property file="build.properties" override="true" />

  <!--         -->
  <!-- Targets -->
  <!-- ======= -->

  <!-- Prepare the project -->
  <target name="prepare"
          description="Prepare for build">
    <exec command="composer install --prefer-dist"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
  </target>

  <!-- Runs a command in the Vagrant host -->
  <target name="vagrant:run"
          if="drush.cmd"
          description="Run a command in the vagrant host.">
    <exec command="vagrant ssh -c '${vagrant.cmd}'"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
  </target>

  <!-- Reinstall the Drupal 8 site. -->
  <target name="reinstall"
          depends="prepare"
          description="Reinstall the Drupal 8 site.">
    <!-- Drop and create the database -->
    <exec command="${drush.cmd} sql-drop -y"
          logoutput="${test.output}"
          passthru="${test.passthru}"/>

    <!-- Ensure the files directory is clean -->
    <exec command="sudo rm -fR ${drupal.dir}/sites/default/files/*"
          logoutput="${test.output}"
          passthru="${test.passthru}" />

    <!-- Ensure we have a fresh settings.php with correct permissions -->
    <exec command="sudo scp ${drupal.dir}/sites/default/default.settings.php ${drupal.dir}/sites/default/settings.php"
          logoutput="${test.output}"
          passthru="${test.passthru}" />
    <exec command="sudo chmod 777 ${drupal.dir}/sites/default/settings.php"
          logoutput="${test.output}"
          passthru="${test.passthru}" />

    <!-- Install the site and simpletest -->
    <phingcall target="install" />
    <phingcall target="simpletest:enable" />
  </target>

  <!-- Install the Drupal 8 site. -->
  <target name="install"
          description="Install the Drupal 8 site.">
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; bin/drush -r ${vagrant.dir}/app site-install ${drupal.profile} -y --db-url=${mysql.queryString} --account-mail=${drupal.email} --account-name=${drupal.user} --account-pass=${drupal.pass} --site-name=${drupal.siteName}" />
    </phingcall>
  </target>

  <!-- Enable Simpletest module -->
  <target name="simpletest:enable"
          description="Enable the Testing module.">
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}; ./bin/drush -r ${vagrant.dir}/app en -y simpletest" />
    </phingcall>
  </target>

  <!-- Test a class -->
  <target name="simpletest:class"
          description="Test a test class using simpletest.">
    <input propertyName="test.class"
           defaultValue="Drupal\action\Tests\ConfigurationTest"
           message="Enter class name with namespace." />
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value='cd ${vagrant.dir}/app; php ./core/scripts/run-tests.sh --php `which php` --concurrency 12 --url http://d8.dev  --verbose --color --class "${test.class}"' />
    </phingcall>
  </target>

  <!-- Test a class -->
  <target name="simpletest:group"
          description="Test a test group using simpletest.">
    <input propertyName="test.group"
           defaultValue="action"
           message="Enter group name." />
    <phingcall target="vagrant:run">
      <!-- After some properties for inside the Vagrant host. -->
      <property name="vagrant.cmd" value="cd ${vagrant.dir}/app; php ./core/scripts/run-tests.sh --php `which php` --concurrency 12 --url http://d8.dev  --verbose --color '${test.group}'" />
    </phingcall>
  </target>

</project>
